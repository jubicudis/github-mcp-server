{
	// WHO: ConfigurationManager
	// WHAT: GitHub MCP Server settings
	// WHEN: During IDE initialization and development
	// WHERE: System Layer 6 (Integration) / MCP Server
	// WHY: To provide consistent development environment for MCP
	// HOW: Using VS Code settings JSON with quantum symmetry
	// EXTENT: All GitHub MCP server operations
	
	"go.buildFlags": ["-tags=mcp,tnos"],
	"go.testFlags": ["-tags=mcp,tnos,test,symmetry"],
	
	// Enhanced GitHub MCP specific settings
	"go.lintFlags": ["--enable=gosec,govet"],
	"go.coverOnSave": false,
	"go.useLanguageServer": true,
	"go.toolsEnvVars": {
		"GO111MODULE": "on",
		"TNOS_CONTEXT_MODE": "debug",
		"MCP_DEVELOPMENT": "true",
		"MOBIUS_SYMMETRY_ENABLED": "true"
	},
	
	// Enhanced AI settings for GitHub MCP
	"github.copilot": {
		"enable": {
			"*": true,
			"go": true,
			"python": true,
			"javascript": true,
			"cpp": true
		},
		"editor": {
			"enableAutoCompletions": true
		},
		"inlineSuggest": {
			"enable": true
		}
	},
	"ai.editor.features.completions.promptContribution": true,
	"ai.experimental.chat.api.dynamicContextExtraction": true,
	"ai.editor.features.inlineChat": "enabled",
	"ai.experimental.chat.api.chat7DFormatting": true,
	
	// Enhanced IntelliSense for MCP
	"editor.suggest.preview": true,
	"editor.suggestSelection": "first",
	
	// C++ support for GitHub MCP bridge components
	"C_Cpp.intelliSenseEngine": "default",
	"C_Cpp.default.cppStandard": "c++20",
	"C_Cpp.enhancedColorization": "enabled",
	"C_Cpp.default.includePath": [
		"${workspaceFolder}/internal/bridge/cpp",
		"${workspaceFolder}/../include",
		"${workspaceFolder}/../core/compression/cpp"
	],
	"C_Cpp.default.defines": [
		"MCP_SERVER",
		"QUANTUM_SYMMETRY_ENABLED",
		"ENABLE_BIDIRECTIONAL_OPERATIONS"
	],
	
	// Ensure symmetry between MCP components
	"files.associations": {
		"*.go.tmpl": "go",
		"*.mcpdef": "json",
		"*.h": "cpp",
		"*.hpp": "cpp",
		"*.c": "c",
		"*.cpp": "cpp"
	},
	
	// MCP-specific search settings
	"search.exclude": {
		"**/node_modules": true,
		"**/logs": true,
		"**/build": true
	},
	
	// WHO: ConfigurationManager
	// WHAT: Python test framework configuration
	// WHEN: During Python test discovery and execution
	// WHERE: System Layer 6 (Integration) / MCP Server
	// WHY: To ensure pytest is used and VS Code notifications are cleared
	// HOW: By setting python.testing.pytestEnabled and related keys
	// EXTENT: All Python test operations
	"python.testing.pytestEnabled": true,
	"python.testing.unittestEnabled": false,
	"python.testing.nosetestsEnabled": false,
	"python.testing.pytestArgs": [
		"."
	],
	"python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python3.11",
	"python.pythonPath": "${workspaceFolder}/.venv/bin/python3.11",
	
	// MCP canonical port and endpoint settings for QHP
	"mcp.tnos.port": 9001,
	"mcp.bridge.port": 10619,
	"mcp.github.port": 10617,
	"mcp.copilot.port": 8083,
	"mcp.tnos.wsEndpoint": "ws://localhost:9001/ws",
	"mcp.bridge.wsEndpoint": "ws://localhost:10619/ws",
	"mcp.github.wsEndpoint": "ws://localhost:10617/ws",
	"mcp.copilot.wsEndpoint": "ws://localhost:8083/ws",
	"mcp.tnos.apiEndpoint": "http://localhost:9001/api",
	"mcp.bridge.apiEndpoint": "http://localhost:10619/api",
	"mcp.github.apiEndpoint": "http://localhost:10617/api",
	"mcp.copilot.apiEndpoint": "http://localhost:8083/api",
	// QHP handshake and diagnostics
	"qhp.enabled": true,
	"qhp.handshake.required": true,
	"qhp.ports": [9001, 10619, 10617, 8083],
	"qhp.protocol": "QHPv1.0",
	"qhp.contextPropagation": "7D",
	
	// Java project source paths and configuration
	"java.project.sourcePaths": [
		"../../systems/java/circulatory/src",
		"../../systems/java/digestive/src",
		"../../systems/java/endocrine/src",
		"../../systems/java/excretory/src",
		"../../systems/java/immune/src",
		"../../systems/java/integumentary/src",
		"../../systems/java/muscular/src",
		"../../systems/java/nervous/src",
		"../../systems/java/reproductive/src",
		"../../systems/java/respiratory/src",
		"../../systems/java/skeletal/src",
		"../src"
	],
	"java.configuration.settings": "${workspaceFolder}/.vscode/java-settings.json"
}
